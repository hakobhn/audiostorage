version: '3.6'

services:
#  resources-ms:
#    build:
#      context: ./resources-ms
#    container_name: resources-ms
#    restart: on-failure
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/audio
#    depends_on:
#      - mongodb
#
#  songs-ms:
#    build:
#      context: ./songs-ms
#    container_name: songs-ms
#    restart: on-failure
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/songs
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#    depends_on:
#      - postgres

  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=audio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./data/mongodb/data:/data/db
    environment:
      - MONGODB_INITSCRIPTS_DIR=/docker-entrypoint-initdb.d
      - MONGODB_USERNAME=demo
      - MONGODB_PASSWORD=audio123!
      - MONGODB_DATABASE=songs

# Volumes
volumes:
  data:
    driver: local
